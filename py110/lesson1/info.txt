PY 110
3.21.2025

P
Inputs - List of Strings
Outputs
- Sorted List (order of highest number of adjacent consonants)

Rules
- Explicit Rules
- - Two Strings Same Consonants? Maintain Order
- - Spaces don't count
- Implicit Rules
[LS] - Strings may contain more than one word

Q
- is case important?
- Consonants are one letter?
- Highest number of adjacent consonants first
- Do they all have to be the same consonant?

E

my_list = ['aa', 'baa', 'ccaa', 'dddaa']
print(sort_by_consonant_count(my_list))
# ['dddaa', 'ccaa', 'aa', 'baa']

my_list = ['can can', 'toucan', 'batman', 'salt pan']
print(sort_by_consonant_count(my_list))
# ['salt pan', 'can can', 'batman', 'toucan']

my_list = ['bar', 'car', 'far', 'jar']
print(sort_by_consonant_count(my_list))
# ['bar', 'car', 'far', 'jar']

my_list = ['day', 'week', 'month', 'year']
print(sort_by_consonant_count(my_list))
# ['month', 'day', 'week', 'year']

my_list = ['xxxa', 'xxxx', 'xxxb']
print(sort_by_consonant_count(my_list))
# ['xxxx', 'xxxb', 'xxxa']

Test Cases:
print(count_max_adjacent_consonants('dddaa'))       # 3
print(count_max_adjacent_consonants('ccaa'))        # 2
print(count_max_adjacent_consonants('baa'))         # 0
print(count_max_adjacent_consonants('aa'))          # 0
print(count_max_adjacent_consonants('rstafgdjecc')) # 4

D

A

1. for each string in the input list, determine the highest number of adjacent consonants within that string.

Input: a string
Output: an integer representing a count of the highest number of
        adjacent consonants in the string

Test Cases:
print(count_max_adjacent_consonants('dddaa'))       # 3
print(count_max_adjacent_consonants('ccaa'))        # 2
print(count_max_adjacent_consonants('baa'))         # 0
print(count_max_adjacent_consonants('aa'))          # 0
print(count_max_adjacent_consonants('rstafgdjecc')) # 4

2. sort the input list based on the calculated highest number of consonants from step 1.
3. return the sorted list


#remove consonants first

C


